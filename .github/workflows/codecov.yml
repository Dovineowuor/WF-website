name: CodeCov
on: [push, pull_request]
jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OS: ubuntu-latest
      PYTHON: '3.11'
    steps:
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@master
      with:
        python-version: 3.11
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ./app/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      working-directory: ./app
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    #----------------------------------------------
    # Run tests, generate and upload code coverage report
    #----------------------------------------------
    - name: Generate Report
      working-directory: ./app
      run: |
        pip install coverage
        source .venv/bin/activate
        coverage run manage.py test app
    - name: Codecov action
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
